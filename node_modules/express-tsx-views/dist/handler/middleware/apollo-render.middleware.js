"use strict";
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _ApolloRenderMiddleware_apollo;
Object.defineProperty(exports, "__esModule", { value: true });
exports.ApolloRenderMiddleware = void 0;
const client_1 = require("@apollo/client");
const ssr_1 = require("@apollo/client/react/ssr");
const react_1 = __importDefault(require("react"));
const tsx_render_middleware_1 = require("./tsx-render.middleware");
class ApolloRenderMiddleware extends tsx_render_middleware_1.TsxRenderMiddleware {
    constructor(apollo) {
        super();
        _ApolloRenderMiddleware_apollo.set(this, void 0);
        __classPrivateFieldSet(this, _ApolloRenderMiddleware_apollo, apollo, "f");
    }
    createElement(context) {
        context.element = react_1.default.createElement(client_1.ApolloProvider, {
            client: __classPrivateFieldGet(this, _ApolloRenderMiddleware_apollo, "f"),
            children: null,
        }, context.element);
        return super.createElement(context);
    }
    async render(context) {
        context.html = await (0, ssr_1.getMarkupFromTree)({ tree: context.element });
        return super.render(context);
    }
}
exports.ApolloRenderMiddleware = ApolloRenderMiddleware;
_ApolloRenderMiddleware_apollo = new WeakMap();
//# sourceMappingURL=apollo-render.middleware.js.map